[{"content":"Well-thought-through product announcements will help increase feature awareness and engage users with new functionality. Just like sharing your public roadmap, it\u0026rsquo;s also a great way to let potential customers see that you\u0026rsquo;re constantly improving.\nFurther reading Read How to announce product updates and features ","date":"2023-09-07","id":0,"permalink":"/blog/example-post/","summary":"You can use blog posts for announcing product updates and features.","tags":[],"title":"Example Post"},{"content":"","date":"2023-09-07","id":1,"permalink":"/blog/","summary":"","tags":[],"title":"Blog"},{"content":"","date":"2023-09-07","id":2,"permalink":"/docs/guides/","summary":"","tags":[],"title":"Guides"},{"content":"Rust microchain has all the features needed to create an LLM application from the ground up!\nOverview Search Google Search (Serpson API): Enables integration with Google search, providing comprehensive search capabilities within your application. Perplexity: Offers tools to assess the complexity and understandability of text, which is crucial for optimizing content. Exa (Metaphor Systems): Advanced search functionalities that enhance the ability to find and interpret complex data patterns. Functions Bash: Incorporates shell scripting capabilities, allowing for versatile script execution and automation within the microchain environment. Templates We are using Tera templates, for prompt templates for our chains\nChains We have implemented chainable, a fucntion that will help you chain vaious LLMS, functions , search together for your application\nLoaders Loaders can be used to load verious type of inputs from files, these are the current loaders implemented:\nPdf loaders HTML loaders text loaders Large Language models We have access to a various LLMs by implementin there apis, these solutions can be used to interact with chains and other models etc.\nOpenAI Ollama Anthropic (coming soon) Embeddings Embeddings can be used to create numerical representations of words , they can be used to create similairties between sentences, text classifications etc. These are currently the models we support\nOpenAI Ollama Anthropic (coming soon) Vector store Vector stores can be used to store vectors. Currently we support these stores\nQdrant Evaluation Currently for evaluation we can use the embeddings above to do a simple similarity using cosine\nComputing cosine similarity using the above embeddings Logging Our framework also provides a simple Logger to log prompts, templates, and any other metric you like !\nsimple Logger and to log your prompts, templates and any metrics ","date":"2023-09-07","id":3,"permalink":"/docs/guides/features/","summary":"Rust microchain has all the features needed to create an LLM application from the ground up!\nOverview Search Google Search (Serpson API): Enables integration with Google search, providing comprehensive search capabilities within your application.","tags":[],"title":"Features"},{"content":"Guides lead a user through a specific task they want to accomplish, often with a sequence of steps. Writing a good guide requires thinking about what your users are trying to do.\nFurther reading Read about how-to guides in the Di치taxis framework ","date":"2023-09-07","id":4,"permalink":"/docs/guides/installation/","summary":"Guides lead a user through a specific task they want to accomplish, often with a sequence of steps. Writing a good guide requires thinking about what your users are trying to do.","tags":[],"title":"installation"},{"content":"We provide a simple logger to log your experiments so you can easily view and compare prompts, metrics, templates etc. Each experiment is saved into one json file with a unique ID and you can use this view your runs, you can log any data you like!\nLogging a new experiment // Create a new LlmLogger instance let mut logger = LlmLogger::new(\u0026#34;experiments.json\u0026#34;.to_string()); // Log a new experiment let prompt = \u0026#34;What is the capital of France?\u0026#34;.to_string(); let experiment_id = logger.log_experiment(prompt); println!(\u0026#34;Logged experiment with ID: {}\u0026#34;, experiment_id);\rLogging data // Log data for the experiment logger.log_data(\u0026amp;experiment_id, \u0026#34;answer\u0026#34;, \u0026#34;Paris\u0026#34;); logger.log_data(\u0026amp;experiment_id, \u0026#34;accuracy\u0026#34;, \u0026#34;0.95\u0026#34;);\rDisplay experiments logger.display_experiments_table();\r","date":"2023-09-07","id":5,"permalink":"/docs/guides/logger/","summary":"We provide a simple logger to log your experiments so you can easily view and compare prompts, metrics, templates etc. Each experiment is saved into one json file with a unique ID and you can use this view your runs, you can log any data you like!","tags":[],"title":"Logger "},{"content":"Guides lead a user through a specific task they want to accomplish, often with a sequence of steps. Writing a good guide requires thinking about what your users are trying to do.\nFurther reading Read about how-to guides in the Di치taxis framework ","date":"2023-09-07","id":6,"permalink":"/docs/guides/quick-start/","summary":"Guides lead a user through a specific task they want to accomplish, often with a sequence of steps. Writing a good guide requires thinking about what your users are trying to do.","tags":[],"title":"Quick Start"},{"content":"","date":"2023-09-07","id":7,"permalink":"/docs/reference/","summary":"","tags":[],"title":"Reference"},{"content":"","date":"2023-09-07","id":8,"permalink":"/docs/tutorials/","summary":"","tags":[],"title":"Tutorials"},{"content":"Reference pages are ideal for outlining how things work in terse and clear terms. Less concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.\nFurther reading Read about reference in the Di치taxis framework ","date":"2023-09-07","id":9,"permalink":"/docs/reference/example-reference/","summary":"Reference pages are ideal for outlining how things work in terse and clear terms. Less concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.","tags":[],"title":"Example Reference"},{"content":"Reference pages are ideal for outlining how things work in terse and clear terms. Less concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.\nFurther reading Read about reference in the Di치taxis framework ","date":"2023-09-07","id":10,"permalink":"/docs/tutorials/tutorial/","summary":"Reference pages are ideal for outlining how things work in terse and clear terms. Less concerned with telling a story or addressing a specific use case, they should give a comprehensive outline of what your documenting.","tags":[],"title":"Tutorial"},{"content":"","date":"2023-09-07","id":11,"permalink":"/docs/","summary":"","tags":[],"title":"Docs"},{"content":"","date":"2023-09-07","id":12,"permalink":"/privacy/","summary":"","tags":[],"title":"Privacy Policy"},{"content":"","date":"2023-09-07","id":13,"permalink":"/","summary":"","tags":[],"title":"Welcome to Rust Microchain"},{"content":"","date":"0001-01-01","id":14,"permalink":"/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"0001-01-01","id":15,"permalink":"/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"0001-01-01","id":16,"permalink":"/tags/","summary":"","tags":[],"title":"Tags"}]